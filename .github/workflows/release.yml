name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build-release:
    name: Build Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            asset_name: climonitor-linux-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            asset_name: climonitor-macos-aarch64

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.target }}

      - name: Cache cargo registry
        uses: Swatinem/rust-cache@v2

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Create archive directory
        run: mkdir -p release/

      - name: Copy binaries
        run: |
          cp target/${{ matrix.target }}/release/climonitor release/
          cp target/${{ matrix.target }}/release/climonitor-launcher release/

      - name: Create tarball
        run: |
          cd release
          tar czf ${{ matrix.asset_name }}.tar.gz climonitor climonitor-launcher
          
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          files: release/${{ matrix.asset_name }}.tar.gz